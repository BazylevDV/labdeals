import logging
import os
from aiogram import Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import FSInputFile
from aiogram.exceptions import TelegramAPIError
from keyboards import main_menu, equipment_menu


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    handlers=[
        logging.FileHandler("bot.log"),  # –õ–æ–≥–∏ –±—É–¥—É—Ç –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –≤ —Ñ–∞–π–ª
        logging.StreamHandler()  # –õ–æ–≥–∏ –±—É–¥—É—Ç –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å
    ]
)

# –°–æ–∑–¥–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()



# –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è (–æ—Å—Ç–∞—é—Ç—Å—è –∂—ë—Å—Ç–∫–æ –ø—Ä–æ–ø–∏—Å–∞–Ω–Ω—ã–º–∏)
equipment_data = {
    "üü¶ –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –º–æ—á–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π H-500, DIRUI, –ö–ù–†": {
        "photo": r"C:\Users\bdv\PycharmProjects\pythonProject41\fotos\H-500.jpg",
        "description": (
            "**üü¶ –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –º–æ—á–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π H-500**\n\n"
            "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∏ —Ç–æ—á–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –º–æ—á–∏. "
            "–ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–π –ª—é–±–æ–≥–æ —É—Ä–æ–≤–Ω—è."
        ),
        "conditions": (
            "üìú *–£—Å–ª–æ–≤–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è:*\n"
            "1. üÜì –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ –Ω–∞ —É—Å–ª–æ–≤–∏—è—Ö –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–ª–∏ –∞—Ä–µ–Ω–¥—ã.\n"
            "2. üìÑ –¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–∫–ª—é—á–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞.\n"
            "3. üöö –î–æ—Å—Ç–∞–≤–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞ –Ω–∞—à —Å—á–µ—Ç."
        ),
        "contact": "üìû *–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–∞:* –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ì—Ä–∏–≥–æ—Ä–∏–∫: +7 (912) 402-31-89"
    },
    "üü© –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–º–º—É–Ω–æ—Ö–µ–º–∏–ª—é–º–∏–Ω–µ—Å—Ü–µ–Ω—Ç–Ω—ã–π –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ in vitro Maglumi 800, –ö–ù–†": {
        "photo": r"C:\Users\bdv\PycharmProjects\pythonProject41\fotos\maglumi_800.jpg",
        "description": (
            "**üü© –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä Maglumi 800**\n\n"
            "–ò–º–º—É–Ω–æ—Ö–µ–º–∏–ª—é–º–∏–Ω–µ—Å—Ü–µ–Ω—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ in vitro. "
            "–í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å."
        ),
        "conditions": (
            "üìú *–£—Å–ª–æ–≤–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è:*\n"
            "1. üÜì –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ –Ω–∞ —É—Å–ª–æ–≤–∏—è—Ö –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–ª–∏ –∞—Ä–µ–Ω–¥—ã.\n"
            "2. üìÑ –¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–∫–ª—é—á–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞.\n"
            "3. üöö –î–æ—Å—Ç–∞–≤–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞ –Ω–∞—à —Å—á–µ—Ç."
        ),
        "contact": "üìû *–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–∞:* –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ì—Ä–∏–≥–æ—Ä–∏–∫: +7 (912) 402-31-89"
    },
    "üü® –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∏–º–º—É–Ω–æ—Ñ–ª—É–æ—Ä–µ—Å—Ü–µ–Ω—Ç–Ω—ã–π Finecare FIA FS-113, Wondfo, –ö–ù–†": {
        "photo": r"C:\Users\bdv\PycharmProjects\pythonProject41\fotos\Analizator-Finecare.png",
        "description": (
            "**üü® –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∏–º–º—É–Ω–æ—Ñ–ª—É–æ—Ä–µ—Å—Ü–µ–Ω—Ç–Ω—ã–π Finecare FIA FS-113**\n\n"
            "–ò–º–º—É–Ω–æ—Ñ–ª—É–æ—Ä–µ—Å—Ü–µ–Ω—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏. "
            "–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –∏ —É–¥–æ–±–Ω—ã–π –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏."
        ),
        "conditions": (
            "üìú *–£—Å–ª–æ–≤–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è:*\n"
            "1. üÜì –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ –Ω–∞ —É—Å–ª–æ–≤–∏—è—Ö –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–ª–∏ –∞—Ä–µ–Ω–¥—ã.\n"
            "2. üìÑ –¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–∫–ª—é—á–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞.\n"
            "3. üöö –î–æ—Å—Ç–∞–≤–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞ –Ω–∞—à —Å—á–µ—Ç."
        ),
        "contact": "üìû *–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–∞:* –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ì—Ä–∏–≥–æ—Ä–∏–∫: +7 (912) 402-31-89"
    },
}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(message: types.Message):
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} ({message.from_user.username}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞.")
    welcome_text = (
        "üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –õ–∞–±—Ç–æ—Ä–≥–ë–æ—Ç!*\n\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n"
        "‚Ä¢ üÜì –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ *–±–µ—Å–ø–ª–∞—Ç–Ω–æ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏*.\n"
        "‚Ä¢ ‚ÑπÔ∏è –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ *–Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏*.\n"
        "‚Ä¢ üß™ –û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å *–º–µ–Ω—é —Ç–µ—Å—Ç–æ–≤ –∫ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞–º Maglumi*.\n"  # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
        "‚Ä¢ üî• –£–∑–Ω–∞—Ç—å –æ *–ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏ —Å–∫–ª–∞–¥–∞ —Ä–µ–∞–≥–µ–Ω—Ç–æ–≤ –∏ –º–µ–¥–∏–∑–¥–µ–ª–∏–π*.\n\n"
        "üëá *–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –Ω–∏–∂–µ:*"
    )
    await message.answer(welcome_text, reply_markup=main_menu, parse_mode="Markdown")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û –Ω–∞—Å"
async def about_us(message: types.Message):
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} ({message.from_user.username}) –∑–∞–ø—Ä–æ—Å–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é '–û –Ω–∞—Å'.")
    try:
        with open("about.txt", "r", encoding="utf-8") as file:
            about_text = file.read()
        await message.answer(f"*–û –Ω–∞—Å:*\n\n{about_text}", parse_mode="Markdown")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ 'about.txt': {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"
async def equipment(message: types.Message):
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} ({message.from_user.username}) –∑–∞–ø—Ä–æ—Å–∏–ª –º–µ–Ω—é –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.")
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ:", reply_markup=equipment_menu)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏
async def send_equipment_info(message: types.Message):
    logging.info(
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} ({message.from_user.username}) –∑–∞–ø—Ä–æ—Å–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏: {message.text}.")
    equipment_name = message.text
    data = equipment_data.get(equipment_name)

    if not data:
        await message.answer("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    photo_path = data["photo"]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
    if not os.path.exists(photo_path):
        await message.answer("–§–æ—Ç–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return

    try:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ
        photo = FSInputFile(photo_path)
        await message.answer_photo(photo)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è
        await message.answer(data["description"], parse_mode="Markdown")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É—Å–ª–æ–≤–∏–π
        await message.answer(data["conditions"], parse_mode="Markdown")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        await message.answer(data["contact"])
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ú–µ–Ω—é —Ç–µ—Å—Ç–æ–≤ –∫ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞–º Maglumi"
async def send_tests_menu(message: types.Message):
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} ({message.from_user.username}) –∑–∞–ø—Ä–æ—Å–∏–ª –º–µ–Ω—é —Ç–µ—Å—Ç–æ–≤.")
    file_path = r"C:\Users\bdv\PycharmProjects\pythonProject41\fotos\–º–µ–Ω—é —Ç–µ—Å—Ç–æ–≤.jpg"

    if not os.path.exists(file_path):
        await message.answer("–§–∞–π–ª —Å –º–µ–Ω—é —Ç–µ—Å—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    try:
        await message.answer("–í–æ—Ç –º–µ–Ω—é —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–≤ Maglumi:")
        await message.answer_document(document=FSInputFile(file_path))
    except TelegramAPIError as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–õ–∏–∫–≤–∏–¥–∞—Ü–∏—è —Å–∫–ª–∞–¥–∞ —Ä–µ–∞–≥–µ–Ω—Ç–æ–≤"
async def liquidation(message: types.Message):
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} ({message.from_user.username}) –∑–∞–ø—Ä–æ—Å–∏–ª —Ñ–∞–π–ª –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏.")
    try:
        # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
        file_path = r"C:\Users\bdv\PycharmProjects\pythonProject41\data\liquidation_file.xls"
        logging.info(f"–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É: {file_path}")  # –õ–æ–≥–∏—Ä—É–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        if not os.path.exists(file_path):
            await message.answer("–§–∞–π–ª –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
        await message.answer("–í–æ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª —Å –ª–∏–∫–≤–∏–¥–∞—Ü–∏–µ–π —Å–∫–ª–∞–¥–∞:")
        await message.answer_document(document=FSInputFile(file_path))
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞ –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
async def back_to_main_menu(message: types.Message):
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} ({message.from_user.username}) –≤–µ—Ä–Ω—É–ª—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.")
    await message.answer("–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu)

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def log_message(message: types.Message):
    logging.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.text}")
    await message.answer("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ.")


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
def register_handlers(dp: Dispatcher):
    dp.message.register(start, Command(commands=['start']))
    dp.message.register(about_us, F.text == "‚ÑπÔ∏è –û –Ω–∞—Å")
    dp.message.register(equipment, F.text == "üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ")
    dp.message.register(send_equipment_info, F.text.in_([
        "üü¶ –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –º–æ—á–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π H-500, DIRUI, –ö–ù–†",
        "üü© –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–º–º—É–Ω–æ—Ö–µ–º–∏–ª—é–º–∏–Ω–µ—Å—Ü–µ–Ω—Ç–Ω—ã–π –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ in vitro Maglumi 800, –ö–ù–†",
        "üü® –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∏–º–º—É–Ω–æ—Ñ–ª—É–æ—Ä–µ—Å—Ü–µ–Ω—Ç–Ω—ã–π Finecare FIA FS-113, Wondfo, –ö–ù–†"
    ]))
    dp.message.register(send_tests_menu, F.text == "üß™ –ú–µ–Ω—é —Ç–µ—Å—Ç–æ–≤ –∫ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞–º Maglumi")  # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –≤—ã–∑–æ–≤
    dp.message.register(liquidation, F.text == "üî• –õ–∏–∫–≤–∏–¥–∞—Ü–∏—è —Å–∫–ª–∞–¥–∞ —Ä–µ–∞–≥–µ–Ω—Ç–æ–≤ –∏ –º–µ–¥–∏–∑–¥–µ–ª–∏–π")
    dp.message.register(back_to_main_menu, F.text == "üîô –ù–∞–∑–∞–¥")
    dp.message.register(log_message)